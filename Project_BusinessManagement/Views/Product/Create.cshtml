@model Project_BusinessManagement.Models.MProduct

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.LMessageException != null)
{
    <div class="alert alert-danger">
        <strong>Error!</strong> @Model.LMessageException
    </div>
}


<h2>Crear Producto</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MProduct</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LListSupplier, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LSupplier.LIdSupplier, Model.LListSupplier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LSupplier.LIdSupplier, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LNameProduct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LNameProduct, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LNameProduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LCdProduct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LCdProduct, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LCdProduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LValueSupplier, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LValueSupplier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LValueSupplier, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LUnit.LNameUnit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LUnit.LIdUnit, Model.LListUnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LUnit.LIdUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LUnit.LNameUnit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LUnit.LIdUnit, Model.LListUnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LUnit.LIdUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
        @Html.LabelFor(model => model.LTaxe.LNameTaxe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LTaxe.LIdTaxe, Model.LListSelectTaxe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LTaxe.LIdTaxe, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
                   
            <input id="btnAddTaxe" name="AddTaxe" type="submit" value="Crear" class="btn btn-success" />
            @Html.DropDownListFor(model => model.LTaxe.LIdTaxe, Model.LListSelectTaxe, new { htmlAttributes = new { @class = "form-control" } })
            <table>
                <thead>
                    <tr>
                        <td>
                            Nombre Impuesto
                        </td>
                        <td>
                            Valor Impuesto
                        </td>
                    </tr>
                </thead>


                <tbody>
            @foreach (var item in Model.LListTaxe)
            {
                <tr>
                    <td>
                        @item.LIdTaxe
                    </td>
                    <td>
                        @*@item.LValueTaxe*@
                    </td>
                </tr>
                    
            }
                </tbody>
            </table>   
            
            @*@{ Html.RenderAction("AddTaxe", new { pMProduct = Model, a = "algo" })}*@
            
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LStatus.LDsEstado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LStatus.LIdStatus, Model.LListStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LStatus.LIdStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.LObject.LIdObject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.LListIdsTaxe, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id ="btnAddProduct" name="Create1" type="submit" value="Crear" class="btn btn-success" />
            </div>
        </div>
    </div>


        <script type="text/javascript">
        $('#btnAddTaxe').click(function () {
            var form = $('form')[0];
            form.action = "@Url.Action("AddTaxe","Product")";
          form.submit();
      });

      $('#btnAddProduct').click(function () {
          var form = $('form#myForm');
          form.attr("action", "@Url.Action("Create1","Product")");
          form.submit();
      });
    </script>
}


<div>
    @Html.ActionLink("Ir a Lista de Productos", "Index")
</div>
